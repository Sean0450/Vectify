#pragma once

#include "Model/ButtonsList.h"
#include "Model/Point.h"

////////////////////////////////////////////////////////////////////////////////
//
//Интерфейс для наблюдения за действиями на рабочей области
//
////////////////////////////////////////////////////////////////////////////////
class WorkAreaWidgetObserver
{
public:
  //-----------------------------------------------------------------------------
  //Деструктор по умолчанию для абстрактного класса.
  //---
  virtual ~WorkAreaWidgetObserver() = default;

  //-----------------------------------------------------------------------------
  //Следит за изменением положения мыши на рабочей области
  //---
  virtual void OnMouseMove(const Point & p) = 0;

  //-----------------------------------------------------------------------------
  //Следит за кликом мыши по рабочей области
  //---
  virtual void OnMousePressed(const Point & p) = 0;

  //-----------------------------------------------------------------------------
  //Следит за отпускаем кнопки мыши на рабочей области.
  //---
  virtual void OnMouseReleased(const Point & p) = 0;

  //-----------------------------------------------------------------------------
  //Следит за перерисовкой рабочей области.
  //---
  virtual void RenderEvent(Painter & painter) = 0;

  //-----------------------------------------------------------------------------
  //Следит за нажатием клавиш на рабочей области
  //---
  virtual void OnKeyPressed(Button button) = 0;

  //-----------------------------------------------------------------------------
  //Следит за перемещением колесика мыши по рабочей области.
  //---
  virtual void OnWheelMove() = 0;
};
