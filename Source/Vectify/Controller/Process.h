#pragma once

#include "Controller/UndoRedo.h"
#include "Model/ButtonsList.h"
#include "Model/DrawingConstants.h"
#include "Model/GeometryObject.h"
#include "Model/ModelOfDocument.h"
#include "View/Painter.h"


class Painter;

////////////////////////////////////////////////////////////////////////////////
//
/*Абстрактный класс для всех процессов рисования в программе.*/
//
////////////////////////////////////////////////////////////////////////////////
class Process
{
public:
  //-----------------------------------------------------------------------------
  //Виртуальный деструкто базового класса.
  //--
  virtual ~Process() = default;
  //-----------------------------------------------------------------------------
  //Возвращает геометрический объект, полученный в процессе рисования.
  //--
  virtual void Apply() = 0;
  //-----------------------------------------------------------------------------
  //Проверка на возможность получить фигуру из процесса.
  //--
  virtual bool CanApply() const noexcept = 0;
  //-----------------------------------------------------------------------------
  //Отключить процесс.
  //--
  virtual void Cancel() = 0;

  //-----------------------------------------------------------------------------
  //Обрабатывает перемещение мыши на рабочей области.
  //--
  virtual void MouseClicked(const Point & p) = 0;

  //-----------------------------------------------------------------------------
  //Обрабатывает клик мыши по рабочей области.
  //--
  virtual void MouseMoved(const Point & p) = 0;

  //-----------------------------------------------------------------------------
  //Обрабатывает отпускание мыши.
  //--
  virtual void MouseReleased(const Point & p) = 0;

  //-----------------------------------------------------------------------------
  //Обрабатывает нажатие клавиши.
  //--
  virtual void KeyPressed(Button button) = 0;

  //-----------------------------------------------------------------------------
  //Отрисовка создаваемого в процессе объекта.
  //--
  virtual void Render(Painter & painter) = 0;
};
